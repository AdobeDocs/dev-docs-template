---
name: Deployment
on:
  workflow_dispatch:
    inputs:
      env:
        description: "Deploy to (stage|prod|stage prod)"
        required: true
        default: "stage"
      clean:
        description: "Clean cache (yes|no)"
        required: true
        default: "no"
      build-navigation:
        description: "Build navigation file (yes|no)"
        required: true
        default: "no"
      build-redirections:
        description: "Build redirections file (yes|no)"
        required: true
        default: "no"

jobs:
  set-state:
    runs-on: ubuntu-latest
    outputs:
      path_prefix: ${{ steps.get_path_prefix.outputs.path_prefix }}
      branch_short_ref: ${{ steps.get_branch.outputs.branch }}
      deploy_stage: ${{ contains(github.event.inputs.env, 'stage') }}
      deploy_prod: ${{ contains(github.event.inputs.env, 'prod') }}
      clean_cache: ${{ contains(github.event.inputs.clean, 'yes') }}
      build_navigation: ${{ contains(github.event.inputs.build-navigation, 'yes') }}
      build_redirections: ${{ contains(github.event.inputs.build-redirections, 'yes') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get path prefix
        uses: actions/github-script@v6
        id: get_path_prefix
        with:
          script: |
            const script = require('./.github/scripts/get-path-prefix.js');
            script({ core, owner: "${{ github.event.repository.owner.login }}", repo: "${{ github.event.repository.name }}" });
          result-encoding: string

      - name: Get branch name
        shell: bash
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> "$GITHUB_OUTPUT"
        id: get_branch

  echo-state:
    needs: [set-state]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deploy to stage - ${{ needs.set-state.outputs.deploy_stage }}"
      - run: echo "Deploy to prod - ${{ needs.set-state.outputs.deploy_prod }}"
      - run: echo "Clean cache - ${{ needs.set-state.outputs.clean_cache }}"
      - run: echo "Build navigation file - ${{ needs.set-state.outputs.build_navigation }}"
      - run: echo "Build redirections file - ${{ needs.set-state.outputs.build_redirections }}"
      - run: echo "Path prefix - ${{ needs.set-state.outputs.path_prefix }}"
      - run: echo "Repository org - ${{ github.event.repository.owner.login }}"
      - run: echo "Repository name - ${{ github.event.repository.name }}"
      - run: echo "Repository branch - ${{ needs.set-state.outputs.branch_short_ref }}"

  build:
    defaults:
      run:
        shell: bash
    needs: [set-state]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node v16 for Yarn v3
        if: needs.set-state.outputs.build_navigation == 'true' || needs.set-state.outputs.build_redirections == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: "16.15.0" # Current LTS version

      - name: Enable Corepack for Yarn v3
        if: needs.set-state.outputs.build_navigation == 'true' || needs.set-state.outputs.build_redirections == 'true'
        run: corepack enable

      - name: Install Yarn v3
        if: needs.set-state.outputs.build_navigation == 'true' || needs.set-state.outputs.build_redirections == 'true'
        uses: borales/actions-yarn@v3
        with:
          cmd: set version stable

      - name: Install Dependencies
        if: needs.set-state.outputs.build_navigation == 'true' || needs.set-state.outputs.build_redirections == 'true'
        uses: borales/actions-yarn@v3
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false
        with:
          cmd: install

      - name: Build navigation file
        if: needs.set-state.outputs.build_navigation == 'true'
        uses: borales/actions-yarn@v3
        with:
          cmd: buildNavigation

      - name: Build redirections file
        if: needs.set-state.outputs.build_redirections == 'true'
        uses: borales/actions-yarn@v3
        with:
          cmd: buildRedirections

      - name: Validate path prefix
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('.github/scripts/validate-path-prefix.js');
            script({ core, pathPrefixFromDevsitePaths: "${{ needs.set-state.outputs.path_prefix }}" });

      - name: Clean cache on stage
        if: needs.set-state.outputs.clean_cache == 'true' && needs.set-state.outputs.deploy_stage == 'true'
        run: |
            bash .github/scripts/process-mds.sh cache stage ${{ needs.set-state.outputs.branch_short_ref }} "${{ needs.set-state.outputs.path_prefix }}"

      - name: Clean cache on prod
        if: needs.set-state.outputs.clean_cache == 'true' && needs.set-state.outputs.deploy_prod == 'true'
        run: |
            bash .github/scripts/process-mds.sh cache prod ${{ needs.set-state.outputs.branch_short_ref }} "${{ needs.set-state.outputs.path_prefix }}"

      - name: Preview
        if: needs.set-state.outputs.deploy_stage == 'true'
        run: |
            bash .github/scripts/process-mds.sh preview stage ${{ needs.set-state.outputs.branch_short_ref }} "${{ needs.set-state.outputs.path_prefix }}"

      - name: Publish
        if: needs.set-state.outputs.deploy_prod == 'true'
        run: |
            bash .github/scripts/process-mds.sh live prod ${{ needs.set-state.outputs.branch_short_ref }} "${{ needs.set-state.outputs.path_prefix }}"